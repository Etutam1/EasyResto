package UI;

import Model.Order;
import Model.Product;
import Controller.Proxy;
import Model.ExceptionReport;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.w3c.dom.Text;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
//// */
/**
 *
 * @author matut
 */
public class EasyRestoInterface extends javax.swing.JFrame implements ExceptionReport {

    /**
     * Creates new form Interfaz
     */
    public EasyRestoInterface() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.proxy.handleRequest("getWorkerButton", "", 0);
        tableModel = (DefaultTableModel) this.tableProducts.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clockOutDialog = new javax.swing.JDialog();
        clockOutDialogPanel = new javax.swing.JPanel();
        clockOutDialogLabel = new javax.swing.JLabel();
        confirmClockOutButton = new javax.swing.JButton();
        refuseClockOutButton = new javax.swing.JButton();
        deleteProductDialog = new javax.swing.JDialog();
        deleteProductDialogPanel = new javax.swing.JPanel();
        QuantityLabel = new javax.swing.JLabel();
        deleteDialogButton = new javax.swing.JButton();
        quantityCombo = new javax.swing.JComboBox<>();
        mainPanel = new javax.swing.JPanel();
        splitBillPanel = new javax.swing.JPanel();
        tableProductsScroll1 = new javax.swing.JScrollPane();
        tableProducts2 = new javax.swing.JTable();
        tableProductsScroll2 = new javax.swing.JScrollPane();
        tableProducts3 = new javax.swing.JTable();
        rigthButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        chargeOrderCashPaymentButton1 = new javax.swing.JButton();
        chargeOrderCardPaymentButton1 = new javax.swing.JButton();
        orderPanel = new javax.swing.JPanel();
        tableProductsScroll = new javax.swing.JScrollPane();
        tableProducts = new javax.swing.JTable();
        familyScrollPanel = new javax.swing.JScrollPane();
        familyPanel = new javax.swing.JPanel();
        productScrollPanel = new javax.swing.JScrollPane();
        productsPanel = new javax.swing.JPanel();
        scrollBackButton = new javax.swing.JButton();
        billButtonsPanel = new javax.swing.JPanel();
        sendProductsButton = new javax.swing.JButton();
        deleteProductButton = new javax.swing.JButton();
        splitBillButton = new javax.swing.JButton();
        printBillButton = new javax.swing.JButton();
        chargeOrderCashPaymentButton = new javax.swing.JButton();
        chargeOrderCardPaymentButton = new javax.swing.JButton();
        tableIDLabel = new javax.swing.JLabel();
        tableLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        productPriceLabel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        totalOrderLabel = new javax.swing.JLabel();
        paxLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        paxPanel = new javax.swing.JPanel();
        paxTextField = new javax.swing.JTextField();
        PaxLabelPanel = new javax.swing.JLabel();
        paxOkButton = new javax.swing.JButton();
        tableMapPanel = new javax.swing.JPanel();
        clockOutButton = new javax.swing.JButton();
        mainPanelBackButton = new javax.swing.JButton();
        workerPasswordPanel = new javax.swing.JPanel();
        passwordButtonPanelTextField = new javax.swing.JPasswordField();
        enterPasswordLabel = new javax.swing.JLabel();
        workerLoginButton = new javax.swing.JButton();
        workerNameLabel = new javax.swing.JLabel();
        passwordPanelBackButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        workerIDLabel = new javax.swing.JLabel();
        workerBackgroundPanel = new javax.swing.JPanel();
        workerScrollPanel = new javax.swing.JScrollPane();
        workersPanel = new javax.swing.JPanel();
        adminSettingsButton = new javax.swing.JButton();
        adminBackgroundPanel = new javax.swing.JPanel();
        adminPanel = new javax.swing.JPanel();
        loginTitleLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        passTextField = new javax.swing.JPasswordField();
        passLabel = new javax.swing.JLabel();
        admingLoginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        adminPanelBackButton = new javax.swing.JButton();
        backgroundPanel = new javax.swing.JPanel();

        clockOutDialog.setSize(new java.awt.Dimension(400, 300));
        clockOutDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clockOutDialogPanel.setBackground(new java.awt.Color(0, 112, 115));
        clockOutDialogPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clockOutDialogLabel.setBackground(new java.awt.Color(255, 255, 255));
        clockOutDialogLabel.setForeground(new java.awt.Color(255, 255, 255));
        clockOutDialogLabel.setText("QUIERES REGISTRAR TU HORA DE SALIDA?");
        clockOutDialogPanel.add(clockOutDialogLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 260, 20));

        confirmClockOutButton.setText("SI");
        confirmClockOutButton.setBorder(null);
        confirmClockOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmClockOutButtonActionPerformed(evt);
            }
        });
        clockOutDialogPanel.add(confirmClockOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 60, 20));

        refuseClockOutButton.setText("NO");
        refuseClockOutButton.setBorder(null);
        refuseClockOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refuseClockOutButtonActionPerformed(evt);
            }
        });
        clockOutDialogPanel.add(refuseClockOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 60, 20));

        clockOutDialog.getContentPane().add(clockOutDialogPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 280));
        clockOutDialog.setVisible(true);

        clockOutDialog.setVisible(false);

        deleteProductDialog.setBackground(new java.awt.Color(0, 112, 115));
        deleteProductDialog.setSize(new java.awt.Dimension(400, 300));
        deleteProductDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deleteProductDialogPanel.setBackground(new java.awt.Color(0, 112, 115));
        deleteProductDialogPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        QuantityLabel.setForeground(new java.awt.Color(255, 255, 255));
        QuantityLabel.setText("¿CUÁNTOS PRODUCTOS QUIERES BORRAR?");
        deleteProductDialogPanel.add(QuantityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, 40));

        deleteDialogButton.setText("BORRAR");
        deleteDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDialogButtonActionPerformed(evt);
            }
        });
        deleteProductDialogPanel.add(deleteDialogButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 90, -1));

        deleteProductDialogPanel.add(quantityCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 50, -1));

        deleteProductDialog.getContentPane().add(deleteProductDialogPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 300));

        deleteProductDialogPanel.setVisible(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(910, 840));
        setSize(new java.awt.Dimension(950, 850));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBackground(new java.awt.Color(0, 112, 115));
        mainPanel.setMinimumSize(new java.awt.Dimension(900, 800));
        mainPanel.setPreferredSize(new java.awt.Dimension(900, 800));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        splitBillPanel.setBackground(new java.awt.Color(0, 112, 115));
        splitBillPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableProducts2.setBackground(new java.awt.Color(255, 255, 255));
        tableProducts2.setForeground(new java.awt.Color(0, 0, 0));
        tableProducts2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio", "Cantidad", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProducts2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableProducts2.setSelectionBackground(new java.awt.Color(0, 153, 153));
        tableProducts2.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tableProducts2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableProductsScroll1.setViewportView(tableProducts2);
        tableProducts2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tableProducts2.getColumnModel().getColumnCount() > 0) {
            tableProducts2.getColumnModel().getColumn(0).setResizable(false);
            tableProducts2.getColumnModel().getColumn(0).setPreferredWidth(10);
            tableProducts2.getColumnModel().getColumn(1).setResizable(false);
            tableProducts2.getColumnModel().getColumn(1).setPreferredWidth(5);
            tableProducts2.getColumnModel().getColumn(2).setResizable(false);
            tableProducts2.getColumnModel().getColumn(3).setMinWidth(0);
            tableProducts2.getColumnModel().getColumn(3).setPreferredWidth(0);
            tableProducts2.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        splitBillPanel.add(tableProductsScroll1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 380, 410));
        tableProductsScroll1.setVisible(false);

        tableProducts3.setBackground(new java.awt.Color(255, 255, 255));
        tableProducts3.setForeground(new java.awt.Color(0, 0, 0));
        tableProducts3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio", "Cantidad", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProducts3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableProducts3.setSelectionBackground(new java.awt.Color(0, 153, 153));
        tableProducts3.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tableProducts3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableProductsScroll2.setViewportView(tableProducts3);
        tableProducts3.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tableProducts3.getColumnModel().getColumnCount() > 0) {
            tableProducts3.getColumnModel().getColumn(0).setResizable(false);
            tableProducts3.getColumnModel().getColumn(0).setPreferredWidth(10);
            tableProducts3.getColumnModel().getColumn(1).setResizable(false);
            tableProducts3.getColumnModel().getColumn(1).setPreferredWidth(5);
            tableProducts3.getColumnModel().getColumn(2).setResizable(false);
            tableProducts3.getColumnModel().getColumn(3).setMinWidth(0);
            tableProducts3.getColumnModel().getColumn(3).setPreferredWidth(0);
            tableProducts3.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        splitBillPanel.add(tableProductsScroll2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 380, 410));
        tableProductsScroll2.setVisible(false);

        rigthButton.setText("->");
        splitBillPanel.add(rigthButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 60, 40));

        leftButton.setText("<-");
        splitBillPanel.add(leftButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 60, 40));

        chargeOrderCashPaymentButton1.setText("E");
        chargeOrderCashPaymentButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeOrderCashPaymentButton1ActionPerformed(evt);
            }
        });
        splitBillPanel.add(chargeOrderCashPaymentButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 490, 40, 40));

        chargeOrderCardPaymentButton1.setText("T");
        chargeOrderCardPaymentButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeOrderCardPaymentButton1ActionPerformed(evt);
            }
        });
        splitBillPanel.add(chargeOrderCardPaymentButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 490, 40, 40));

        mainPanel.add(splitBillPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 720));
        this.splitBillPanel.setVisible(false);

        orderPanel.setBackground(new java.awt.Color(0, 112, 115));
        orderPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableProducts.setBackground(new java.awt.Color(255, 255, 255));
        tableProducts.setForeground(new java.awt.Color(0, 0, 0));
        tableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio", "Cantidad", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProducts.setColumnSelectionAllowed(true);
        tableProducts.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableProducts.setSelectionBackground(new java.awt.Color(0, 153, 153));
        tableProducts.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tableProducts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableProductsScroll.setViewportView(tableProducts);
        tableProducts.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tableProducts.getColumnModel().getColumnCount() > 0) {
            tableProducts.getColumnModel().getColumn(0).setResizable(false);
            tableProducts.getColumnModel().getColumn(0).setPreferredWidth(10);
            tableProducts.getColumnModel().getColumn(1).setResizable(false);
            tableProducts.getColumnModel().getColumn(1).setPreferredWidth(5);
            tableProducts.getColumnModel().getColumn(2).setResizable(false);
            tableProducts.getColumnModel().getColumn(3).setMinWidth(0);
            tableProducts.getColumnModel().getColumn(3).setPreferredWidth(0);
            tableProducts.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        orderPanel.add(tableProductsScroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 380, 410));
        tableProductsScroll.setVisible(false);
        this.changeComponentVisibility(this.tableProductsScroll, false);

        familyScrollPanel.setBackground(new java.awt.Color(0, 112, 115));
        familyScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        familyScrollPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));

        familyPanel.setBackground(new java.awt.Color(0, 112, 115));
        familyPanel.setForeground(new java.awt.Color(102, 102, 102));
        familyPanel.setPreferredSize(new java.awt.Dimension(10, 1000));
        familyPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        familyScrollPanel.setViewportView(familyPanel);

        orderPanel.add(familyScrollPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 365, 410));
        familyScrollPanel.setVisible(false);
        this.changeComponentVisibility(this.familyScrollPanel, false);

        productScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        productScrollPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));

        productsPanel.setBackground(new java.awt.Color(0, 112, 115));
        productsPanel.setPreferredSize(new java.awt.Dimension(10, 1000));
        productsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        productScrollPanel.setViewportView(productsPanel);

        orderPanel.add(productScrollPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 365, 410));
        productScrollPanel.setVisible(false);
        this.changeComponentVisibility(this.productScrollPanel, false);

        scrollBackButton.setForeground(new java.awt.Color(51, 51, 51));
        scrollBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/img/1.png"))); // NOI18N
        scrollBackButton.setBorder(null);
        scrollBackButton.setPreferredSize(new java.awt.Dimension(60, 60));
        scrollBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scrollBackButtonActionPerformed(evt);
            }
        });
        orderPanel.add(scrollBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 460, 65, 65));

        billButtonsPanel.setBackground(new java.awt.Color(0, 112, 115));
        billButtonsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sendProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendProductsButtonActionPerformed(evt);
            }
        });
        billButtonsPanel.add(sendProductsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 60, 60));
        this.sendProductsButton.setSize(60,60);
        this.sendProductsButton.setIcon(this.getResizedButtonIcon("src/Resources/img/send2.png", this.sendProductsButton.getSize()));

        deleteProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductButtonActionPerformed(evt);
            }
        });
        billButtonsPanel.add(deleteProductButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 60, 60));
        deleteProductButton.setSize(60, 60);
        deleteProductButton.setIcon(this.getResizedButtonIcon("src/Resources/img/trashcan.png", deleteProductButton.getSize()));

        splitBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splitBillButtonActionPerformed(evt);
            }
        });
        billButtonsPanel.add(splitBillButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 60, 60));
        splitBillButton.setSize(60,60);
        splitBillButton.setIcon(this.getResizedButtonIcon("src/Resources/img/splitbill.png", splitBillButton.getSize()));

        printBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBillButtonActionPerformed(evt);
            }
        });
        billButtonsPanel.add(printBillButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 60, 60));
        printBillButton.setSize(60,60);
        printBillButton.setIcon(this.getResizedButtonIcon("src/Resources/img/printbill2.png", printBillButton.getSize()));

        chargeOrderCashPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeOrderCashPaymentButtonActionPerformed(evt);
            }
        });
        billButtonsPanel.add(chargeOrderCashPaymentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 60, 60));
        this.chargeOrderCashPaymentButton.setSize(60,60);
        this.chargeOrderCashPaymentButton.setIcon(this.getResizedButtonIcon("src/Resources/img/cash.png", this.chargeOrderCashPaymentButton.getSize()));

        chargeOrderCardPaymentButton.setMargin(new java.awt.Insets(5, 5, 5, 5));
        chargeOrderCardPaymentButton.setMaximumSize(new java.awt.Dimension(60, 60));
        chargeOrderCardPaymentButton.setMinimumSize(new java.awt.Dimension(60, 60));
        chargeOrderCardPaymentButton.setPreferredSize(new java.awt.Dimension(60, 60));
        chargeOrderCardPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeOrderCardPaymentButtonActionPerformed(evt);
            }
        });
        billButtonsPanel.add(chargeOrderCardPaymentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 60, 60));
        this.chargeOrderCardPaymentButton.setSize(60,60);
        chargeOrderCardPaymentButton.setIcon(this.getResizedButtonIcon("src/Resources/img/card.png",chargeOrderCardPaymentButton.getSize() ));

        orderPanel.add(billButtonsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, 455, 111));
        billButtonsPanel.setVisible(false);
        this.changeComponentVisibility(this.billButtonsPanel, false);

        tableIDLabel.setBackground(new java.awt.Color(255, 255, 255));
        tableIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        orderPanel.add(tableIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 50, 30));

        tableLabel.setBackground(new java.awt.Color(255, 255, 255));
        tableLabel.setForeground(new java.awt.Color(255, 255, 255));
        tableLabel.setText("MESA:");
        orderPanel.add(tableLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 60, 30));

        priceLabel.setForeground(new java.awt.Color(255, 255, 255));
        priceLabel.setText("PRECIO:");
        orderPanel.add(priceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 16, 50, 20));

        productPriceLabel.setForeground(new java.awt.Color(255, 255, 255));
        orderPanel.add(productPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 11, 80, 30));

        totalLabel.setForeground(new java.awt.Color(255, 255, 255));
        totalLabel.setText("TOTAL:");
        orderPanel.add(totalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 40, 30));

        totalOrderLabel.setBackground(new java.awt.Color(255, 255, 255));
        totalOrderLabel.setForeground(new java.awt.Color(255, 255, 255));
        orderPanel.add(totalOrderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 70, 30));

        paxLabel.setBackground(new java.awt.Color(255, 255, 255));
        paxLabel.setForeground(new java.awt.Color(255, 255, 255));
        orderPanel.add(paxLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 50, 30));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("COMENSALES:");
        orderPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 90, 30));

        mainPanel.add(orderPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 720));
        this.orderPanel.setVisible(false);

        paxPanel.setBackground(new java.awt.Color(0, 112, 115));
        paxPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paxTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paxTextFieldActionPerformed(evt);
            }
        });
        paxPanel.add(paxTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 40, -1));

        PaxLabelPanel.setForeground(new java.awt.Color(255, 255, 255));
        PaxLabelPanel.setText("COMENSALES:");
        paxPanel.add(PaxLabelPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, 90, -1));

        paxOkButton.setText("OK");
        paxOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paxOkButtonActionPerformed(evt);
            }
        });
        paxPanel.add(paxOkButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, 60, 20));

        mainPanel.add(paxPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 880, 710));
        this.changeComponentVisibility(paxPanel, false);

        tableMapPanel.setBackground(new java.awt.Color(255, 255, 255));
        tableMapPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        mainPanel.add(tableMapPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 860, 700));
        tableMapPanel.getAccessibleContext().setAccessibleDescription("");

        clockOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/img/shutdown.png"))); // NOI18N
        clockOutButton.setBorder(null);
        clockOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockOutButtonActionPerformed(evt);
            }
        });
        mainPanel.add(clockOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 730, 65, 65));

        mainPanelBackButton.setForeground(new java.awt.Color(51, 51, 51));
        mainPanelBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/img/1.png"))); // NOI18N
        mainPanelBackButton.setBorder(null);
        mainPanelBackButton.setPreferredSize(new java.awt.Dimension(60, 60));
        mainPanelBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainPanelBackButtonActionPerformed(evt);
            }
        });
        mainPanel.add(mainPanelBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 730, 65, 65));

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 810));
        this.changeComponentVisibility(this.mainPanel, false);

        workerPasswordPanel.setBackground(new java.awt.Color(0, 112, 115));
        workerPasswordPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passwordButtonPanelTextField.setBackground(new java.awt.Color(255, 255, 255));
        passwordButtonPanelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordButtonPanelTextFieldActionPerformed(evt);
            }
        });
        workerPasswordPanel.add(passwordButtonPanelTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 190, -1));

        enterPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        enterPasswordLabel.setText("CONTRASEÑA:");
        workerPasswordPanel.add(enterPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, 180, -1));

        workerLoginButton.setForeground(new java.awt.Color(51, 51, 51));
        workerLoginButton.setText("LOGIN");
        workerLoginButton.setBorder(null);
        workerLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workerLoginButtonActionPerformed(evt);
            }
        });
        workerPasswordPanel.add(workerLoginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 70, 20));

        workerNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        workerNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        workerNameLabel.setText("      WORKER");
        workerPasswordPanel.add(workerNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 260, 50));

        passwordPanelBackButton.setForeground(new java.awt.Color(51, 51, 51));
        passwordPanelBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/img/1.png"))); // NOI18N
        passwordPanelBackButton.setBorder(null);
        passwordPanelBackButton.setPreferredSize(new java.awt.Dimension(60, 60));
        passwordPanelBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordPanelBackButtonActionPerformed(evt);
            }
        });
        workerPasswordPanel.add(passwordPanelBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 730, 65, 65));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID:");
        workerPasswordPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 20, -1));

        workerIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        workerIDLabel.setText("000000");
        workerPasswordPanel.add(workerIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, 100, -1));

        getContentPane().add(workerPasswordPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 810));
        this.changeComponentVisibility(this.workerPasswordPanel, false);

        workerBackgroundPanel.setBackground(new java.awt.Color(0, 112, 115));
        workerBackgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workerScrollPanel.setBackground(new java.awt.Color(0, 122, 115));
        workerScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        workerScrollPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));

        workersPanel.setBackground(new java.awt.Color(255, 255, 255));
        workersPanel.setMaximumSize(new java.awt.Dimension(420, 610));
        workersPanel.setPreferredSize(new java.awt.Dimension(420, 2000));
        workersPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        workerScrollPanel.setViewportView(workersPanel);

        workerBackgroundPanel.add(workerScrollPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 450, 610));

        adminSettingsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/img/admin.png"))); // NOI18N
        adminSettingsButton.setPreferredSize(new java.awt.Dimension(60, 60));
        adminSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminSettingsButtonActionPerformed(evt);
            }
        });
        workerBackgroundPanel.add(adminSettingsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 730, 65, 65));

        getContentPane().add(workerBackgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 810));

        adminBackgroundPanel.setBackground(new java.awt.Color(0, 112, 115));
        adminBackgroundPanel.setAutoscrolls(true);
        adminBackgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adminPanel.setBackground(new java.awt.Color(0, 112, 115));
        adminPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginTitleLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        loginTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        loginTitleLabel.setText("EASYRESTO");
        adminPanel.add(loginTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, 35));

        emailTextField.setBackground(new java.awt.Color(255, 255, 255));
        emailTextField.setForeground(new java.awt.Color(0, 0, 0));
        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });
        adminPanel.add(emailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 210, -1));

        emailLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailLabel.setText("EMAIL");
        adminPanel.add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, -1, -1));

        passTextField.setBackground(new java.awt.Color(255, 255, 255));
        passTextField.setForeground(new java.awt.Color(0, 0, 0));
        passTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passTextFieldActionPerformed(evt);
            }
        });
        adminPanel.add(passTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 210, -1));

        passLabel.setForeground(new java.awt.Color(255, 255, 255));
        passLabel.setText("PASS");
        adminPanel.add(passLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 40, -1));

        admingLoginButton.setForeground(new java.awt.Color(51, 51, 51));
        admingLoginButton.setText("LOGIN");
        admingLoginButton.setBorder(null);
        admingLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admingLoginButtonActionPerformed(evt);
            }
        });
        adminPanel.add(admingLoginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 80, 20));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" ADMIN ZONE");
        adminPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 80, 30));

        adminBackgroundPanel.add(adminPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, 370, 450));

        adminPanelBackButton.setForeground(new java.awt.Color(255, 255, 255));
        adminPanelBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/img/1.png"))); // NOI18N
        adminPanelBackButton.setBorder(null);
        adminPanelBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminPanelBackButtonActionPerformed(evt);
            }
        });
        adminBackgroundPanel.add(adminPanelBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 730, 65, 65));

        getContentPane().add(adminBackgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 810));
        this.changeComponentVisibility(this.adminBackgroundPanel, false);

        backgroundPanel.setBackground(new java.awt.Color(0, 112, 115));
        backgroundPanel.setMinimumSize(new java.awt.Dimension(900, 800));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(900, 800));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 810));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void admingLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admingLoginButtonActionPerformed
        this.proxy.login(true, this.emailTextField.getText(), this.passTextField.getPassword());
        this.emptyPassFieldText(this.passTextField);
    }//GEN-LAST:event_admingLoginButtonActionPerformed

    private void passTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passTextFieldActionPerformed
        this.admingLoginButtonActionPerformed(evt);
    }//GEN-LAST:event_passTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        this.passTextField.requestFocusInWindow();
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void passwordButtonPanelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordButtonPanelTextFieldActionPerformed
        this.workerLoginButtonActionPerformed(evt);
    }//GEN-LAST:event_passwordButtonPanelTextFieldActionPerformed

    private void workerLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workerLoginButtonActionPerformed
        if (this.proxy.login(false, this.workerIDLabel.getText(), this.passwordButtonPanelTextField.getPassword())) {
            if (!this.proxy.handleRequest("checkClockIn", "", this.proxy.getWorkerLogged().getId())) {
                this.proxy.handleRequest("cloclIn", "", this.proxy.getWorkerLogged().getId());
            }
            this.changeComponentVisibility(this.workerPasswordPanel, false);
            this.changeComponentVisibility(this.mainPanel, true);
            this.tableMapPanel.removeAll();
            this.proxy.handleRequest("getTablesButton", "", 0);
        }
        this.emptyPassFieldText(this.passwordButtonPanelTextField);
    }//GEN-LAST:event_workerLoginButtonActionPerformed

    private void passwordPanelBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordPanelBackButtonActionPerformed
        this.changeComponentVisibility(this.workerPasswordPanel, false);
        this.changeComponentVisibility(this.workerBackgroundPanel, true);
        this.changeComponentVisibility(this.workersPanel, true);
        this.emptyPassFieldText(this.passwordButtonPanelTextField);
        this.changeComponentVisibility(this.adminSettingsButton, true);

    }//GEN-LAST:event_passwordPanelBackButtonActionPerformed

    private void adminPanelBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminPanelBackButtonActionPerformed
        this.changeComponentVisibility(this.adminBackgroundPanel, false);
        this.changeComponentVisibility(this.workerBackgroundPanel, true);
        this.emailTextField.setText("");
        this.emptyPassFieldText(passTextField);

    }//GEN-LAST:event_adminPanelBackButtonActionPerformed

    private void adminSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminSettingsButtonActionPerformed
        this.changeComponentVisibility(this.workerBackgroundPanel, false);
        this.changeComponentVisibility(this.adminBackgroundPanel, true);
    }//GEN-LAST:event_adminSettingsButtonActionPerformed

    private void scrollBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scrollBackButtonActionPerformed
        if (this.productScrollPanel.isVisible()) {
            this.changeComponentVisibility(this.productScrollPanel, false);
            this.changeComponentVisibility(this.familyScrollPanel, true);
            this.productPriceLabel.setText("");
        }
    }//GEN-LAST:event_scrollBackButtonActionPerformed

    private void clockOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockOutButtonActionPerformed
        this.clockOutDialog.setLocationRelativeTo(this);
        this.changeComponentVisibility(this.clockOutDialog, true);
    }//GEN-LAST:event_clockOutButtonActionPerformed

    private void confirmClockOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmClockOutButtonActionPerformed
        this.proxy.handleRequest("clockOut", "", this.proxy.getWorkerLogged().getId());
        JOptionPane.showMessageDialog(this, "HASTA PRONTO!");
        this.changeComponentVisibility(this.mainPanel, false);
        this.changeComponentVisibility(this.clockOutDialog, false);
        this.changeComponentVisibility(this.workerBackgroundPanel, true);
        this.changeComponentVisibility(this.workersPanel, true);
    }//GEN-LAST:event_confirmClockOutButtonActionPerformed

    private void refuseClockOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refuseClockOutButtonActionPerformed
        this.changeComponentVisibility(this.clockOutDialog, false);
    }//GEN-LAST:event_refuseClockOutButtonActionPerformed

    private void mainPanelBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainPanelBackButtonActionPerformed
        if (this.proxy.handleRequest("rememberClockOut", "", this.proxy.getWorkerLogged().getId())) {
            JOptionPane.showMessageDialog(this, "RECUERDA REGISTRAR TU SALIDA!");
        }
        if (this.tableMapPanel.isVisible()) {
            this.changeComponentVisibility(this.mainPanel, false);
            this.changeComponentVisibility(this.workerBackgroundPanel, true);
            this.changeComponentVisibility(this.workersPanel, true);
        } else if (this.orderPanel.isVisible()) {
            this.backToTablePanel();
        } else if (this.splitBillPanel.isVisible()) {
            this.changeComponentVisibility(this.splitBillPanel, false);
            this.showMainPanel();
        } else if (this.paxPanel.isVisible()) {
            this.changeComponentVisibility(this.paxPanel, false);
            this.changeComponentVisibility(this.tableMapPanel, true);
        }
    }//GEN-LAST:event_mainPanelBackButtonActionPerformed

    private void backToTablePanel() {
        this.changeComponentVisibility(this.orderPanel, false);
        this.changeComponentVisibility(this.tableMapPanel, true);
        this.productPriceLabel.setText("");
        this.proxy.getCurrentOrder().getPendingProductsArray().clear();
        this.tableModel.setRowCount(0);
        this.tableMapPanel.removeAll();
        this.proxy.handleRequest("getTablesButton", "", 0);
        this.totalOrderLabel.setText("");
        this.paxLabel.setText("");
    }

    private void sendProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendProductsButtonActionPerformed
        if (this.proxy.getCurrentOrder().getPendingProductsArray().isEmpty()) {
            JOptionPane.showMessageDialog(this, "POR FAVOR, AGREGA PRODUCTOS");
        } else {
            if (this.proxy.getCurrentOrder().getOrderID() == 0) {
                this.proxy.generateOrder(this.proxy.getWorkerLogged().getId(), Integer.parseInt(this.tableIDLabel.getText()), Integer.parseInt(this.paxLabel.getText()));
                this.proxy.getCurrentOrder().setOrderID(proxy.getOrderID(Integer.parseInt(this.tableIDLabel.getText())));
            }

            this.proxy.handleRequest("sendPendingProducts", "", 0);
            this.proxy.getCurrentOrder().getPendingProductsArray().clear();
            this.totalOrderLabel.setText(String.valueOf(this.proxy.getTotalOrder(this.proxy.getCurrentOrder().getOrderID())));
        }
    }//GEN-LAST:event_sendProductsButtonActionPerformed

    private void deleteProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductButtonActionPerformed
        this.resetComboBox();
        if (this.tableProducts.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "POR FAVOR, SELECCIONA EL PRODUCTO QUE QUIERES ELIMINAR");
        } else {
            this.selectedProduct = this.getProductFromSelectedRow();
            this.changeComponentVisibility(this.deleteProductDialog, true);
            this.deleteProductDialog.setLocationRelativeTo(this);
            this.addProductQuantitiesToComboBox(selectedProduct);
        }
    }//GEN-LAST:event_deleteProductButtonActionPerformed

    private void resetComboBox() {
        this.quantityCombo.removeAllItems();
    }

    private void addProductQuantitiesToComboBox(Product selectedProduct) {
        for (int quantity = 1; quantity <= selectedProduct.getProductQuantity(); quantity++) {
            this.quantityCombo.addItem(String.valueOf(quantity));
        }
    }

    private Product getProductFromSelectedRow() {
        int selectedProductID = (int) this.tableModel.getValueAt(this.tableProducts.getSelectedRow(), 3);
        int selectedProductQuantity = (int) this.tableModel.getValueAt(this.tableProducts.getSelectedRow(), 2);
        return new Product(selectedProductID, selectedProductQuantity);
    }

    private void splitBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splitBillButtonActionPerformed
        if (this.proxy.getCurrentOrder().getOrderID() != 0) {
            this.changeComponentVisibility(this.orderPanel, false);
            this.showSplitPanel();
        } else {
            JOptionPane.showMessageDialog(this, "LA CUENTA ESTÁ VACÍA");
        }

    }//GEN-LAST:event_splitBillButtonActionPerformed

    private void showSplitPanel() {
        this.changeComponentVisibility(this.splitBillPanel, true);
        this.changeComponentVisibility(this.tableProductsScroll1, true);
        this.changeComponentVisibility(this.tableProductsScroll2, true);
        this.changeComponentVisibility(this.rigthButton, true);
        this.changeComponentVisibility(this.leftButton, true);
        this.changeComponentVisibility(this.chargeOrderCardPaymentButton1, true);
        this.changeComponentVisibility(this.chargeOrderCashPaymentButton1, true);
    }


    private void printBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBillButtonActionPerformed
        if (this.proxy.getCurrentOrder().getOrderID() != 0) {

        } else {
            JOptionPane.showMessageDialog(this, "LA CUENTA ESTÁ VACÍA");
        }
    }//GEN-LAST:event_printBillButtonActionPerformed

    private void deleteDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDialogButtonActionPerformed
        int selectedQuantity = Integer.parseInt((String) this.quantityCombo.getSelectedItem());

        if (!this.proxy.getCurrentOrder().getPendingProductsArray().isEmpty()) {
            int pendingQuantityToRemove = this.proxy.getCurrentOrder().removeProductFromPendingArray(selectedProduct, selectedQuantity);
            System.out.println("pendiente" + pendingQuantityToRemove);
            if (pendingQuantityToRemove > 0) {
                this.proxy.removeProductFromOrder(selectedProduct, pendingQuantityToRemove);
            }
        } else {
            this.proxy.removeProductFromOrder(selectedProduct, selectedQuantity);
        }
        this.deleteProductFromTable(selectedQuantity);
        this.totalOrderLabel.setText(String.valueOf(this.proxy.getTotalOrder(this.proxy.getCurrentOrder().getOrderID())));
        this.changeComponentVisibility(this.deleteProductDialog, false);

        if (this.tableModel.getRowCount() == 0 && this.proxy.getCurrentOrder().getOrderID() != 0) {
            this.proxy.handleRequest("removeOrder", "", this.proxy.getCurrentOrder().getOrderID());
            this.totalOrderLabel.setText("");
        }
    }//GEN-LAST:event_deleteDialogButtonActionPerformed

    private void chargeOrderCardPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeOrderCardPaymentButtonActionPerformed
        if (this.proxy.getCurrentOrder().getOrderID() != 0) {
            this.proxy.handleRequest("closeOrder", "", this.proxy.getCurrentOrder().getOrderID());
            this.backToTablePanel();
        } else {
            JOptionPane.showMessageDialog(this, "LA CUENTA ESTÁ VACÍA");
        }
    }//GEN-LAST:event_chargeOrderCardPaymentButtonActionPerformed

    private void chargeOrderCashPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeOrderCashPaymentButtonActionPerformed

        if (this.proxy.getCurrentOrder().getOrderID() != 0) {
            this.proxy.handleRequest("closeOrder", "", this.proxy.getCurrentOrder().getOrderID());
            this.backToTablePanel();
        } else {
            JOptionPane.showMessageDialog(this, "LA CUENTA ESTÁ VACÍA");
        }
    }//GEN-LAST:event_chargeOrderCashPaymentButtonActionPerformed

    private void paxOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paxOkButtonActionPerformed
        if (checkNumberInPaxField()) {
            this.paxLabel.setText(this.paxTextField.getText());
            this.paxTextField.setText("");
            this.changeComponentVisibility(this.paxPanel, false);

            showMainPanel();

        } else {
            JOptionPane.showMessageDialog(this, "POR FAVOR INTRODUCE UN NÚMERO");
            this.paxTextField.setText("");
        }
    }//GEN-LAST:event_paxOkButtonActionPerformed

    public void showMainPanel() {
        changeComponentVisibility(this.orderPanel, true);
        changeComponentVisibility(tableProductsScroll, true);
        changeComponentVisibility(familyScrollPanel, true);
        changeComponentVisibility(tableProducts, true);
        changeComponentVisibility(productScrollPanel, false);
        changeComponentVisibility(billButtonsPanel, true);
        changeComponentVisibility(this.scrollBackButton, true);
    }

    private boolean checkNumberInPaxField() {
        Pattern pattern = Pattern.compile("^[0-9]+$");
        Matcher matcher = pattern.matcher(this.paxTextField.getText());
        return matcher.matches();
    }

    private void paxTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paxTextFieldActionPerformed
        // TODO add your handling code here:
        this.paxOkButtonActionPerformed(evt);
    }//GEN-LAST:event_paxTextFieldActionPerformed

    private void chargeOrderCashPaymentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeOrderCashPaymentButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chargeOrderCashPaymentButton1ActionPerformed

    private void chargeOrderCardPaymentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeOrderCardPaymentButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chargeOrderCardPaymentButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EasyRestoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EasyRestoInterface().setVisible(true);
            }
        });
    }

    /**
     *
     *
     * @param panel
     * @param button
     */
    private void addProductToTable(Product product) {
        Object[] productRow = {product.getProductName(), product.getProductPrice(), product.getProductQuantity(), product.getProductID()};
        int numberOfRows = tableModel.getRowCount();

        if (numberOfRows == 0 || !checkExistingProductInTable(numberOfRows, product)) {
            tableModel.addRow(productRow);
        }
    }

    private boolean checkExistingProductInTable(int tableRowCount, Product product) {
        for (int row = 0; row < tableRowCount; row++) {
            int productID = (int) tableModel.getValueAt(row, 3);
            if (productID == product.getProductID()) {
                updateProductQuantity(row);
                return true;
            }
        }
        return false;
    }

    private void deleteProductFromTable(int quantityToRemove) {
        final int SELECTED_ROW = this.tableProducts.getSelectedRow();
        final int QUANTITY_COLUMN_INDEX = 2;
        int selectedRowQuantity = (int) this.tableModel.getValueAt(SELECTED_ROW, QUANTITY_COLUMN_INDEX);
        if (selectedRowQuantity == quantityToRemove) {
            this.tableModel.removeRow(SELECTED_ROW);
        } else {
            int updatedQuantity = selectedRowQuantity - quantityToRemove;
            this.tableModel.setValueAt(updatedQuantity, SELECTED_ROW, QUANTITY_COLUMN_INDEX);
        }
    }

    private void updateProductQuantity(int row) {
        final int QUANTITY_COLUMN_INDEX = 2;
        final int QUANTITY_VALUE = (int) tableModel.getValueAt(row, QUANTITY_COLUMN_INDEX);
        tableModel.setValueAt(QUANTITY_VALUE + 1, row, QUANTITY_COLUMN_INDEX);
    }

    public void configProductFamilyButton(String familyName) {
        JButton familyProductButton = new JButton(familyName);
        Font font = new Font(familyProductButton.getFont().getName(), familyProductButton.getFont().getStyle(), 9);
        familyProductButton.setFont(font);
        familyProductButton.setPreferredSize(new Dimension(80, 80));
        this.addActionListenerToFamilyProductButton(familyProductButton, familyName);
        this.addButtonToPanel(this.familyPanel, familyProductButton);
    }

    private void addActionListenerToFamilyProductButton(JButton button, String familyName) {
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                changeComponentVisibility(familyScrollPanel, false);
                changeComponentVisibility(productScrollPanel, true);
                productsPanel.removeAll();
                proxy.handleRequest("getProductButton", familyName, 0);
            }
        });
    }

    public void configWorkerButton(String workerName, int workerID) {
        JButton workerButton = new JButton(workerName);
        workerButton.setPreferredSize(new Dimension(80, 80));
        this.addActionListenerToWorkerButton(workerButton, workerID, workerName);
        this.addButtonToPanel(this.workersPanel, workerButton);
    }

    private void addActionListenerToWorkerButton(JButton button, int workerID, String workerName) {
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                changeComponentVisibility(workersPanel, false);
                changeComponentVisibility(workerPasswordPanel, true);
                changeComponentVisibility(workerBackgroundPanel, false);
                configWorkerNameLabel(workerName);
                configWorkerIDLabel(workerID);
                passwordButtonPanelTextField.requestFocus();
                changeComponentVisibility(adminSettingsButton, true);
            }
        });
    }

    private void addButtonToPanel(JPanel panel, JButton button) {
        panel.add(button);
    }

    public void configProductButton(int productID, String productName, double productPrice, String url) {
        JButton productButton = new JButton("");
        productButton.setPreferredSize(new Dimension(80, 80));
        productButton.setSize(new Dimension(80, 80));
        this.addActionListenerToProductButton(productButton, new Product(productID, productName, productPrice));
        productButton.setIcon(this.getResizedButtonIcon(url, productButton.getSize()));
        this.addButtonToPanel(this.productsPanel, productButton);
    }

    private void addActionListenerToProductButton(JButton button, Product product) {
        button.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Constructor<? extends Product> constructor = Product.class.getDeclaredConstructor(int.class, String.class, double.class);
                    Product productToAdd = constructor.newInstance(product.getProductID(), product.getProductName(), product.getProductPrice());

                    productPriceLabel.setText(Double.toString(product.getProductPrice()));
                    addProductToTable(productToAdd);
                    proxy.getCurrentOrder().addProductToPendingArray(productToAdd);

                } catch (NoSuchMethodException | SecurityException | InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {
                    reportException(ex);
                }
            }
        });
    }

    public void configTableButton(int tableID, Point tableLocation, int capacity, String url) {
        JButton tableButton = new JButton();
        Dimension buttonDimension = configButtonDimensionByCapacity(capacity);

        JLabel tableNumberLabel = configTableIDLabel(tableID);
        Point tableButtonCenterPoint = new Point(tableLocation.x + buttonDimension.width / 2, tableLocation.y + buttonDimension.height / 2);

        tableButton.setIcon(getResizedButtonIcon(url, buttonDimension));
        hideButtonBackground(tableButton);

        addActionListenerToTableButton(tableButton, tableID);

        this.tableMapPanel.add(tableNumberLabel, new AbsoluteConstraints(tableButtonCenterPoint.x - tableNumberLabel.getWidth() / 2, tableButtonCenterPoint.y - tableNumberLabel.getHeight() / 2));
        this.tableMapPanel.add(tableButton, new AbsoluteConstraints(tableLocation.x, tableLocation.y, buttonDimension.width, buttonDimension.height));
    }

    private void addActionListenerToTableButton(JButton tableButton, int tableID) {
        tableButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                changeComponentVisibility(tableMapPanel, false);
                tableIDLabel.setText(String.valueOf(tableID));

                familyPanel.removeAll();
                proxy.handleRequest("getProductFamilyButton", "", 0);

                Order auxOrder = proxy.getOrderData(tableID);

                if (auxOrder == null) {
                    changeComponentVisibility(paxPanel, true);
                    proxy.setCurrentOrder(new Order());
                    System.out.println("al entrar mesa:" + proxy.getCurrentOrder().getOrderID());
                } else {
                    showMainPanel();
                    proxy.setCurrentOrder(auxOrder);
                    System.out.println("al entrar mesa:" + proxy.getCurrentOrder().getOrderID());
                    proxy.handleRequest("getOrderProducts", "", proxy.getCurrentOrder().getOrderID());
                    totalOrderLabel.setText(String.valueOf(proxy.getTotalOrder(proxy.getCurrentOrder().getOrderID())));
                    paxLabel.setText(String.valueOf(proxy.getCurrentOrder().getPax()));
                }
            }
        });
    }

    private JLabel configTableIDLabel(int tableID) {
        JLabel tableNumberLabel = new JLabel(String.valueOf(tableID));
        tableNumberLabel.setSize(10, 15);
        return tableNumberLabel;
    }

    private ImageIcon getResizedButtonIcon(String iconUrl, Dimension buttonDimension) {
        ImageIcon icon = new ImageIcon(iconUrl);
        Image img = icon.getImage().getScaledInstance(buttonDimension.width - 10, buttonDimension.height - 10, Image.SCALE_SMOOTH);
        return new ImageIcon(img);
    }

    private void hideButtonBackground(JButton tableButton) {
        tableButton.setContentAreaFilled(false);
        tableButton.setBorderPainted(false);
    }

    private Dimension configButtonDimensionByCapacity(int capacity) {

        return switch (capacity) {
            case 2 ->
                new Dimension(60, 60);
            case 4 ->
                new Dimension(60, 60);
            case 6 ->
                new Dimension(120, 60);
            default ->
                new Dimension(100, 100);
        };
    }

    private void configWorkerIDLabel(int workerID) {
        workerIDLabel.setText(String.valueOf(workerID));
    }

    private void configWorkerNameLabel(String workerName) {
        workerNameLabel.setText(workerName);
        workerNameLabel.setHorizontalAlignment(JLabel.CENTER);
    }

    private void changeComponentVisibility(Component component, boolean visibility) {
        component.setVisible(visibility);
    }

    public void emptyPassFieldText(JPasswordField passwordField) {
        passwordField.setText("");
    }

    public boolean checkEmptyWorkerPassField(String password) throws HeadlessException {
        return password.isBlank();
    }

    public boolean checkEmptyAdminLoginFields(String email, String password) throws HeadlessException {
        return password.isBlank() || email.isBlank();
    }

    @Override
    public void reportException(Exception exception) {
        PrintWriter salida = null;

        try {
            salida = new PrintWriter(new FileWriter("Exceptions.txt", true));
            salida.write("Se ha producido la excepcion:" + exception.toString() + "\n Fecha: " + new Date().toString() + "\n");
        } catch (FileNotFoundException ex2) {
            JOptionPane.showMessageDialog(this, "NO SE HA PODIDO REPORTAR UN PROBLEMA");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "NO SE HA PODIDO REPORTAR UN PROBLEMA");
        } finally {

            if (salida != null) {
                salida.close();
            }
        }
    }

    // <editor-fold defaultstate="collapsed" desc="GETTERS&SETTERS"> 
    public JButton getChargeOrderCardPayment() {
        return chargeOrderCardPaymentButton;
    }

    public void setChargeOrderCardPayment(JButton chargeOrderCardPayment1) {
        this.chargeOrderCardPaymentButton = chargeOrderCardPayment1;
    }

    public JButton getChargeOrderCashPayment() {
        return chargeOrderCashPaymentButton;
    }

    public void setChargeOrderCashPayment(JButton chargeOrderCashPayment) {
        this.chargeOrderCashPaymentButton = chargeOrderCashPayment;
    }

    public Proxy getProxy() {
        return proxy;
    }

    public void setProxy(Proxy proxy) {
        this.proxy = proxy;
    }

    public JPanel getAdminBackgroundPanel() {
        return adminBackgroundPanel;
    }

    public void setAdminBackgroundPanel(JPanel adminBackgroundPanel) {
        this.adminBackgroundPanel = adminBackgroundPanel;
    }

    public JPanel getAdminPanel() {
        return adminPanel;
    }

    public void setAdminPanel(JPanel adminPanel) {
        this.adminPanel = adminPanel;
    }

    public JButton getAdminPanelBackButton() {
        return adminPanelBackButton;
    }

    public void setAdminPanelBackButton(JButton adminPanelBackButton) {
        this.adminPanelBackButton = adminPanelBackButton;
    }

    public JButton getAdminSettingsButton() {
        return adminSettingsButton;
    }

    public void setAdminSettingsButton(JButton adminSettingsButton) {
        this.adminSettingsButton = adminSettingsButton;
    }

    public JButton getAdmingLoginButton() {
        return admingLoginButton;
    }

    public void setAdmingLoginButton(JButton admingLoginButton) {
        this.admingLoginButton = admingLoginButton;
    }

    public JButton getClockOutButton() {
        return clockOutButton;
    }

    public void setClockOutButton(JButton clockOutButton) {
        this.clockOutButton = clockOutButton;
    }

    public JDialog getClockOutDialog() {
        return clockOutDialog;
    }

    public void setClockOutDialog(JDialog clockOutDialog) {
        this.clockOutDialog = clockOutDialog;
    }

    public JLabel getClockOutDialogLabel() {
        return clockOutDialogLabel;
    }

    public void setClockOutDialogLabel(JLabel clockOutDialogLabel) {
        this.clockOutDialogLabel = clockOutDialogLabel;
    }

    public JPanel getClockOutDialogPanel() {
        return clockOutDialogPanel;
    }

    public void setClockOutDialogPanel(JPanel clockOutDialogPanel) {
        this.clockOutDialogPanel = clockOutDialogPanel;
    }

    public JButton getConfirmClockOutButton() {
        return confirmClockOutButton;
    }

    public void setConfirmClockOutButton(JButton confirmClockOutButton) {
        this.confirmClockOutButton = confirmClockOutButton;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JScrollPane getjScrollPane1() {
        return workerScrollPanel;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.workerScrollPanel = jScrollPane1;
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public void setMainPanel(JPanel mainPanel) {
        this.mainPanel = mainPanel;
    }

    public JButton getMainPanelBackButton() {
        return scrollBackButton;
    }

    public void setMainPanelBackButton(JButton mainPanelBackButton) {
        this.scrollBackButton = mainPanelBackButton;
    }

    public JButton getRefuseClockOutButton() {
        return refuseClockOutButton;
    }

    public void setRefuseClockOutButton(JButton refuseClockOutButton) {
        this.refuseClockOutButton = refuseClockOutButton;
    }

    public JPanel getTableMapPanel() {
        return tableMapPanel;
    }

    public void setTableMapPanel(JPanel tableMapPanel) {
        this.tableMapPanel = tableMapPanel;
    }

    public JPanel getWorkerBackgroundPanel() {
        return workerBackgroundPanel;
    }

    public void setWorkerBackgroundPanel(JPanel workerBackgroundPanel) {
        this.workerBackgroundPanel = workerBackgroundPanel;
    }

    public JLabel getWorkerIDLabel() {
        return workerIDLabel;
    }

    public void setWorkerIDLabel(JLabel workerIDLabel) {
        this.workerIDLabel = workerIDLabel;
    }

    public JButton getWorkerLoginButton() {
        return workerLoginButton;
    }

    public void setWorkerLoginButton(JButton workerLoginButton) {
        this.workerLoginButton = workerLoginButton;
    }

    public JPanel getWorkerPasswordPanel() {
        return workerPasswordPanel;
    }

    public void setWorkerPasswordPanel(JPanel workerPasswordPanel) {
        this.workerPasswordPanel = workerPasswordPanel;
    }

    public JPanel getWorkersPanel() {
        return workersPanel;
    }

    public void setWorkersPanel(JPanel workersPanel) {
        this.workersPanel = workersPanel;
    }

    public JPanel getBackgroundPanel() {
        return adminBackgroundPanel;
    }

    public void setBackgroundPanel(JPanel backgroundPanel) {
        this.adminBackgroundPanel = backgroundPanel;
    }

    public JLabel getEmailLabel() {
        return emailLabel;
    }

    public void setEmailLabel(JLabel emailLabel) {
        this.emailLabel = emailLabel;
    }

    public JTextField getEmailTextField() {
        return emailTextField;
    }

    public void setEmailTextField(JTextField emailTextField) {
        this.emailTextField = emailTextField;
    }

    public JButton getLoginButton() {
        return admingLoginButton;
    }

    public void setLoginButton(JButton loginButton) {
        this.admingLoginButton = loginButton;
    }

    public JPanel getLoginButtonsPanel() {
        return workersPanel;
    }

    public void setLoginButtonsPanel(JPanel loginButtonsPanel) {
        this.workersPanel = loginButtonsPanel;
    }

    public JPanel getLoginPanel() {
        return adminPanel;
    }

    public void setLoginPanel(JPanel loginPanel) {
        this.adminPanel = loginPanel;
    }

    public JLabel getLoginTitleLabel() {
        return loginTitleLabel;
    }

    public void setLoginTitleLabel(JLabel loginTitleLabel) {
        this.loginTitleLabel = loginTitleLabel;
    }

    public JLabel getPassLabel() {
        return passLabel;
    }

    public void setPassLabel(JLabel passLabel) {
        this.passLabel = passLabel;
    }

    public JPasswordField getPassTextField() {
        return passTextField;
    }

    public void setPassTextField(JPasswordField passTextField) {
        this.passTextField = passTextField;
    }

    public JLabel getEnterPasswordLabel() {
        return enterPasswordLabel;
    }

    public void setEnterPasswordLabel(JLabel enterPasswordLabel) {
        this.enterPasswordLabel = enterPasswordLabel;
    }

    public JButton getLoginButton2() {
        return workerLoginButton;
    }

    public void setLoginButton2(JButton loginButton2) {
        this.workerLoginButton = loginButton2;
    }

    public JPanel getPasswordButtonPanel() {
        return workerPasswordPanel;
    }

    public void setPasswordButtonPanel(JPanel passwordButtonPanel) {
        this.workerPasswordPanel = passwordButtonPanel;
    }

    public JPasswordField getPasswordButtonPanelTextField() {
        return passwordButtonPanelTextField;
    }

    public void setPasswordButtonPanelTextField(JPasswordField passwordButtonPanelTextField) {
        this.passwordButtonPanelTextField = passwordButtonPanelTextField;
    }

    public JButton getPasswordPanelBackButton() {
        return passwordPanelBackButton;
    }

    public void setPasswordPanelBackButton(JButton passwordPanelBackButton) {
        this.passwordPanelBackButton = passwordPanelBackButton;
    }

    public JLabel getWorkerNameLabel() {
        return workerNameLabel;
    }

    public void setWorkerNameLabel(JLabel workerNameLabel) {
        this.workerNameLabel = workerNameLabel;
    }

    public DefaultTableModel getTableModel() {
        return tableModel;
    }

    public void setTableModel(DefaultTableModel tableModel) {
        this.tableModel = tableModel;
    }

    public JButton getScrollBackButton() {
        return scrollBackButton;
    }

    public void setScrollBackButton(JButton ScrollBackButton) {
        this.scrollBackButton = ScrollBackButton;
    }

    public JPanel getBillButtonsPanel() {
        return billButtonsPanel;
    }

    public void setBillButtonsPanel(JPanel billButtonsPanel) {
        this.billButtonsPanel = billButtonsPanel;
    }

    public JButton getChargeButton() {
        return splitBillButton;
    }

    public void setChargeButton(JButton chargeButton) {
        this.splitBillButton = chargeButton;
    }

    public JButton getDeleteProductButton() {
        return deleteProductButton;
    }

    public void setDeleteProductButton(JButton deleteProductButton) {
        this.deleteProductButton = deleteProductButton;
    }

    public JPanel getFamilyPanel() {
        return familyPanel;
    }

    public void setFamilyPanel(JPanel familyPanel) {
        this.familyPanel = familyPanel;
    }

    public JScrollPane getFamilyScrollPanel() {
        return familyScrollPanel;
    }

    public void setFamilyScrollPanel(JScrollPane familyScrollPanel) {
        this.familyScrollPanel = familyScrollPanel;
    }

    public JLabel getPriceLabel() {
        return priceLabel;
    }

    public void setPriceLabel(JLabel priceLabel) {
        this.priceLabel = priceLabel;
    }

    public JButton getPrintBillButton() {
        return printBillButton;
    }

    public void setPrintBillButton(JButton printBillButton) {
        this.printBillButton = printBillButton;
    }

    public JLabel getProductPriceLabel() {
        return productPriceLabel;
    }

    public void setProductPriceLabel(JLabel productPriceLabel) {
        this.productPriceLabel = productPriceLabel;
    }

    public JScrollPane getProductScrollPanel() {
        return productScrollPanel;
    }

    public void setProductScrollPanel(JScrollPane productScrollPanel) {
        this.productScrollPanel = productScrollPanel;
    }

    public JPanel getProductsPanel() {
        return productsPanel;
    }

    public void setProductsPanel(JPanel productsPanel) {
        this.productsPanel = productsPanel;
    }

    public JButton getSendProductsButton() {
        return sendProductsButton;
    }

    public void setSendProductsButton(JButton sendProductsButton) {
        this.sendProductsButton = sendProductsButton;
    }

    public JLabel getTableIDLabel() {
        return tableIDLabel;
    }

    public void setTableIDLabel(JLabel tableIDLabel) {
        this.tableIDLabel = tableIDLabel;
    }

    public JLabel getTableLabel() {
        return tableLabel;
    }

    public void setTableLabel(JLabel tableLabel) {
        this.tableLabel = tableLabel;
    }

    public JTable getTableProducts() {
        return tableProducts;
    }

    public void setTableProducts(JTable tableProducts) {
        this.tableProducts = tableProducts;
    }

    public JScrollPane getTableProductsScroll() {
        return tableProductsScroll;
    }

    public void setTableProductsScroll(JScrollPane tableProductsScroll) {
        this.tableProductsScroll = tableProductsScroll;
    }

    public JScrollPane getWorkerScrollPanel() {
        return workerScrollPanel;
    }

    public void setWorkerScrollPanel(JScrollPane workerScrollPanel) {
        this.workerScrollPanel = workerScrollPanel;
    }

    public Product getSelectedProduct() {
        return selectedProduct;
    }

    public void setSelectedProduct(Product selectedProduct) {
        this.selectedProduct = selectedProduct;
    }

    public JLabel getQuantityLabel() {
        return QuantityLabel;
    }

    public void setQuantityLabel(JLabel QuantityLabel) {
        this.QuantityLabel = QuantityLabel;
    }

    public JButton getDeleteDialogButton() {
        return deleteDialogButton;
    }

    public void setDeleteDialogButton(JButton deleteDialogButton) {
        this.deleteDialogButton = deleteDialogButton;
    }

    public JDialog getDeleteProductDialog() {
        return deleteProductDialog;
    }

    public void setDeleteProductDialog(JDialog deleteProductDialog) {
        this.deleteProductDialog = deleteProductDialog;
    }

    public JPanel getDeleteProductDialogPanel() {
        return deleteProductDialogPanel;
    }

    public void setDeleteProductDialogPanel(JPanel deleteProductDialogPanel) {
        this.deleteProductDialogPanel = deleteProductDialogPanel;
    }

    public JComboBox<String> getQuantityCombo() {
        return quantityCombo;
    }

    public void setQuantityCombo(JComboBox<String> quantityCombo) {
        this.quantityCombo = quantityCombo;
    }

    public JLabel getTotalLabel() {
        return totalLabel;
    }

    public void setTotalLabel(JLabel totalLabel) {
        this.totalLabel = totalLabel;
    }

    public JLabel getTotalOrderLabel() {
        return totalOrderLabel;
    }

    public void setTotalOrderLabel(JLabel totalOrderLabel) {
        this.totalOrderLabel = totalOrderLabel;
    }
    //</editor-fold>

    private Product selectedProduct = null;
    private DefaultTableModel tableModel;
    private Proxy proxy = new Proxy(this);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PaxLabelPanel;
    private javax.swing.JLabel QuantityLabel;
    private javax.swing.JPanel adminBackgroundPanel;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JButton adminPanelBackButton;
    private javax.swing.JButton adminSettingsButton;
    private javax.swing.JButton admingLoginButton;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JPanel billButtonsPanel;
    private javax.swing.JButton chargeOrderCardPaymentButton;
    private javax.swing.JButton chargeOrderCardPaymentButton1;
    private javax.swing.JButton chargeOrderCashPaymentButton;
    private javax.swing.JButton chargeOrderCashPaymentButton1;
    private javax.swing.JButton clockOutButton;
    private javax.swing.JDialog clockOutDialog;
    private javax.swing.JLabel clockOutDialogLabel;
    private javax.swing.JPanel clockOutDialogPanel;
    private javax.swing.JButton confirmClockOutButton;
    private javax.swing.JButton deleteDialogButton;
    private javax.swing.JButton deleteProductButton;
    private javax.swing.JDialog deleteProductDialog;
    private javax.swing.JPanel deleteProductDialogPanel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel enterPasswordLabel;
    private javax.swing.JPanel familyPanel;
    private javax.swing.JScrollPane familyScrollPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton leftButton;
    private javax.swing.JLabel loginTitleLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton mainPanelBackButton;
    private javax.swing.JPanel orderPanel;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField passTextField;
    private javax.swing.JPasswordField passwordButtonPanelTextField;
    private javax.swing.JButton passwordPanelBackButton;
    private javax.swing.JLabel paxLabel;
    private javax.swing.JButton paxOkButton;
    private javax.swing.JPanel paxPanel;
    private javax.swing.JTextField paxTextField;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JButton printBillButton;
    private javax.swing.JLabel productPriceLabel;
    private javax.swing.JScrollPane productScrollPanel;
    private javax.swing.JPanel productsPanel;
    private javax.swing.JComboBox<String> quantityCombo;
    private javax.swing.JButton refuseClockOutButton;
    private javax.swing.JButton rigthButton;
    private javax.swing.JButton scrollBackButton;
    private javax.swing.JButton sendProductsButton;
    private javax.swing.JButton splitBillButton;
    private javax.swing.JPanel splitBillPanel;
    private javax.swing.JLabel tableIDLabel;
    private javax.swing.JLabel tableLabel;
    private javax.swing.JPanel tableMapPanel;
    private javax.swing.JTable tableProducts;
    private javax.swing.JTable tableProducts2;
    private javax.swing.JTable tableProducts3;
    private javax.swing.JScrollPane tableProductsScroll;
    private javax.swing.JScrollPane tableProductsScroll1;
    private javax.swing.JScrollPane tableProductsScroll2;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JLabel totalOrderLabel;
    private javax.swing.JPanel workerBackgroundPanel;
    private javax.swing.JLabel workerIDLabel;
    private javax.swing.JButton workerLoginButton;
    private javax.swing.JLabel workerNameLabel;
    private javax.swing.JPanel workerPasswordPanel;
    private javax.swing.JScrollPane workerScrollPanel;
    private javax.swing.JPanel workersPanel;
    // End of variables declaration//GEN-END:variables

}
