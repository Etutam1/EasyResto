package UI;

import Model.EasyRestoDB;
import Model.Worker;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.event.AncestorListener;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author matut
 */
public class EasyRestoInterface extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public EasyRestoInterface() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.changePanelVisibility(this.loginPanel, false);
        this.changePanelVisibility(this.passwordButtonPanel, false);
        this.easyRestoDB.getWorkerNameButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        passwordButtonPanel = new javax.swing.JPanel();
        passwordButtonPanelTextField = new javax.swing.JPasswordField();
        enterPasswordLabel = new javax.swing.JLabel();
        loginButton2 = new javax.swing.JButton();
        workerNameLabel = new javax.swing.JLabel();
        passwordPanelBackButton = new javax.swing.JButton();
        loginButtonsPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        loginTitleLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        passTextField = new javax.swing.JPasswordField();
        passLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPanel.setBackground(new java.awt.Color(0, 115, 112));
        backgroundPanel.setAutoscrolls(true);
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passwordButtonPanel.setBackground(new java.awt.Color(0, 115, 112));
        passwordButtonPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passwordButtonPanelTextField.setBackground(new java.awt.Color(255, 255, 255));
        passwordButtonPanelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordButtonPanelTextFieldActionPerformed(evt);
            }
        });
        passwordButtonPanel.add(passwordButtonPanelTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 190, -1));

        enterPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        enterPasswordLabel.setText("CONTRASEÑA:");
        passwordButtonPanel.add(enterPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 180, -1));

        loginButton2.setBackground(new java.awt.Color(153, 153, 153));
        loginButton2.setForeground(new java.awt.Color(255, 255, 255));
        loginButton2.setText("LOGIN");
        loginButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        loginButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButton2ActionPerformed(evt);
            }
        });
        passwordButtonPanel.add(loginButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 50, -1));

        workerNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        workerNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        workerNameLabel.setText("WORKER");
        passwordButtonPanel.add(workerNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 260, 50));

        passwordPanelBackButton.setBackground(new java.awt.Color(153, 153, 153));
        passwordPanelBackButton.setForeground(new java.awt.Color(255, 255, 255));
        passwordPanelBackButton.setText("ATRÁS");
        passwordPanelBackButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        passwordPanelBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordPanelBackButtonActionPerformed(evt);
            }
        });
        passwordButtonPanel.add(passwordPanelBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 60, -1));

        backgroundPanel.add(passwordButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 400, 490));

        loginButtonsPanel.setBackground(new java.awt.Color(255, 255, 255));
        loginButtonsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        backgroundPanel.add(loginButtonsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 345, 510));

        loginPanel.setBackground(new java.awt.Color(0, 115, 112));
        loginPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginTitleLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        loginTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        loginTitleLabel.setText("EASYRESTO");
        loginPanel.add(loginTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, 35));

        emailTextField.setBackground(new java.awt.Color(255, 255, 255));
        emailTextField.setForeground(new java.awt.Color(0, 0, 0));
        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });
        loginPanel.add(emailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 210, -1));

        emailLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailLabel.setText("EMAIL");
        loginPanel.add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, -1, -1));

        passTextField.setBackground(new java.awt.Color(255, 255, 255));
        passTextField.setForeground(new java.awt.Color(0, 0, 0));
        passTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passTextFieldActionPerformed(evt);
            }
        });
        loginPanel.add(passTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 210, -1));

        passLabel.setForeground(new java.awt.Color(255, 255, 255));
        passLabel.setText("PASS");
        loginPanel.add(passLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 40, -1));

        loginButton.setBackground(new java.awt.Color(153, 153, 153));
        loginButton.setText("Login");
        loginButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        loginPanel.add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 80, 20));

        backgroundPanel.add(loginPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 370, 450));

        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        this.login();
        this.emptyPassFieldText(this.passTextField);
    }//GEN-LAST:event_loginButtonActionPerformed

    private void passTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passTextFieldActionPerformed
        this.login();
        this.emptyPassFieldText(this.passTextField);
    }//GEN-LAST:event_passTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        this.passTextField.requestFocusInWindow();
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void passwordButtonPanelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordButtonPanelTextFieldActionPerformed
        this.login();
        this.emptyPassFieldText(this.passwordButtonPanelTextField);
    }//GEN-LAST:event_passwordButtonPanelTextFieldActionPerformed

    private void loginButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButton2ActionPerformed
        this.login();
        this.emptyPassFieldText(this.passwordButtonPanelTextField);
    }//GEN-LAST:event_loginButton2ActionPerformed

    private void passwordPanelBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordPanelBackButtonActionPerformed
        this.changePanelVisibility(this.passwordButtonPanel, false);
        this.changePanelVisibility(this.loginButtonsPanel, true);
        this.emptyPassFieldText(this.passwordButtonPanelTextField);
    }//GEN-LAST:event_passwordPanelBackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EasyRestoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EasyRestoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EasyRestoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EasyRestoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EasyRestoInterface().setVisible(true);

            }
        });
    }
    /** 
     * 
     * @param panel
     * @param button 
     */
    private void addButtonToPanel(JPanel panel, JButton button) {
        panel.add(button);
    }

    public void configWorkerButton(String workerName) {
        JButton workerButton = new JButton(workerName);
        workerButton.setPreferredSize(new Dimension(80, 60));
        this.addActionListenerToButton(workerButton);
        this.addButtonToPanel(this.loginButtonsPanel, workerButton);
    }

    private void addActionListenerToButton(JButton button) {

        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String workerName = ((JButton) e.getSource()).getText();
//                JOptionPane.showMessageDialog(rootPane, "BOTON DE " + workerName + " PULSADO");
                changePanelVisibility(loginButtonsPanel, false);
                changePanelVisibility(passwordButtonPanel, true);
                workerNameLabel.setText(workerName);
                passwordButtonPanelTextField.requestFocus();
            }
        });
    }

    private void login() {
        
        if (this.loginButton.hasFocus() || this.passTextField.hasFocus()) {
            login1();
        } else if (this.loginButton2.hasFocus() || this.passwordButtonPanelTextField.hasFocus()) {
            login2();
        }
    }

    private void login2() throws HeadlessException {
        if (this.checkEmptyLoginTextFields(this.passwordButtonPanelTextField.getPassword())) {
            if (this.easyRestoDB.checkCorrectPassword(null, this.passwordButtonPanelTextField.getPassword(), this.workerNameLabel.getText())) {
                this.workerLogged = this.easyRestoDB.getWorkerData(this.workerNameLabel.getText());
                JOptionPane.showMessageDialog(this, "BIENVENIDO A EASYRESTO!");
            } else {
                JOptionPane.showMessageDialog(this, "CONTRASEÑA INCORRECTA, VUELVE A INTENTARLO");
                this.emptyPassFieldText(this.passwordButtonPanelTextField);
            }
        }
    }

    private void login1() throws HeadlessException {
        if (checkEmptyLoginTextFields(this.passTextField.getPassword())) {
            if (this.easyRestoDB.checkRegisteredWorker(this.emailTextField.getText())) {
                if (this.easyRestoDB.checkCorrectPassword(this.emailTextField.getText(), this.passTextField.getPassword(), null)) {
                    this.workerLogged = this.easyRestoDB.getWorkerData(this.emailTextField.getText());
                    JOptionPane.showMessageDialog(this, "BIENVENIDO A EASYRESTO!");
                } else {
                    JOptionPane.showMessageDialog(this, "USUARIO O CONTRASEÑA INCORRECTO, VUELVE A INTENTARLO");
                    this.emptyPassFieldText(this.passTextField);
                }
            } else {
                JOptionPane.showMessageDialog(this, "EL CORREO INTRODUCIDO NO SE ENCUENTRA REGISTRADO");
                this.emptyPassFieldText(this.passTextField);
            }
        }
    }

    private void changePanelVisibility(JPanel panel, boolean visibility) {
        panel.setVisible(visibility);

    }

    private void emptyPassFieldText(JPasswordField passwordField) {
        passwordField.setText("");
    }

    private boolean checkEmptyLoginTextFields(char[] password) {
         String passwordStr = new String(password);
        if (this.loginButton.hasFocus() || this.passTextField.hasFocus()) {
            return checkEmptyEmailPassFields(passwordStr);
            
        }
        return checkEmptyPassField(passwordStr);
    }

    private boolean checkEmptyPassField(String pass) throws HeadlessException {
        if (pass.isBlank()) {
            JOptionPane.showMessageDialog(this, "POR FAVOR INTRODUCE TU CONTRASEÑA");
            return false;
        } 
            return true;    
    }

    private boolean checkEmptyEmailPassFields(String pass) throws HeadlessException {
        if (pass.isBlank() || this.emailTextField.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "POR FAVOR RELLENA TODOS LOS CAMPOS");
            return false;
        } else {
            return true;
        }
    }

    public Worker getWorkerLogged() {
        return workerLogged;
    }

    public void setWorkerLogged(Worker workerLogged) {
        this.workerLogged = workerLogged;
    }

    public JPanel getBackgroundPanel() {
        return backgroundPanel;
    }

    public void setBackgroundPanel(JPanel backgroundPanel) {
        this.backgroundPanel = backgroundPanel;
    }

    public JLabel getEmailLabel() {
        return emailLabel;
    }

    public void setEmailLabel(JLabel emailLabel) {
        this.emailLabel = emailLabel;
    }

    public JTextField getEmailTextField() {
        return emailTextField;
    }

    public void setEmailTextField(JTextField emailTextField) {
        this.emailTextField = emailTextField;
    }

    public JButton getLoginButton() {
        return loginButton;
    }

    public void setLoginButton(JButton loginButton) {
        this.loginButton = loginButton;
    }

    public JPanel getLoginButtonsPanel() {
        return loginButtonsPanel;
    }

    public void setLoginButtonsPanel(JPanel loginButtonsPanel) {
        this.loginButtonsPanel = loginButtonsPanel;
    }

    public JPanel getLoginPanel() {
        return loginPanel;
    }

    public void setLoginPanel(JPanel loginPanel) {
        this.loginPanel = loginPanel;
    }

    public JLabel getLoginTitleLabel() {
        return loginTitleLabel;
    }

    public void setLoginTitleLabel(JLabel loginTitleLabel) {
        this.loginTitleLabel = loginTitleLabel;
    }

    public JLabel getPassLabel() {
        return passLabel;
    }

    public void setPassLabel(JLabel passLabel) {
        this.passLabel = passLabel;
    }

    public JPasswordField getPassTextField() {
        return passTextField;
    }

    public void setPassTextField(JPasswordField passTextField) {
        this.passTextField = passTextField;
    }

    public JLabel getEnterPasswordLabel() {
        return enterPasswordLabel;
    }

    public void setEnterPasswordLabel(JLabel enterPasswordLabel) {
        this.enterPasswordLabel = enterPasswordLabel;
    }

    public JButton getLoginButton2() {
        return loginButton2;
    }

    public void setLoginButton2(JButton loginButton2) {
        this.loginButton2 = loginButton2;
    }

    public JPanel getPasswordButtonPanel() {
        return passwordButtonPanel;
    }

    public void setPasswordButtonPanel(JPanel passwordButtonPanel) {
        this.passwordButtonPanel = passwordButtonPanel;
    }

    public JPasswordField getPasswordButtonPanelTextField() {
        return passwordButtonPanelTextField;
    }

    public void setPasswordButtonPanelTextField(JPasswordField passwordButtonPanelTextField) {
        this.passwordButtonPanelTextField = passwordButtonPanelTextField;
    }

    public JButton getPasswordPanelBackButton() {
        return passwordPanelBackButton;
    }

    public void setPasswordPanelBackButton(JButton passwordPanelBackButton) {
        this.passwordPanelBackButton = passwordPanelBackButton;
    }

    public JLabel getWorkerNameLabel() {
        return workerNameLabel;
    }

    public void setWorkerNameLabel(JLabel workerNameLabel) {
        this.workerNameLabel = workerNameLabel;
    }

    private final EasyRestoDB easyRestoDB = new EasyRestoDB(this);
    private Worker workerLogged;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel enterPasswordLabel;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton loginButton2;
    private javax.swing.JPanel loginButtonsPanel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel loginTitleLabel;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField passTextField;
    private javax.swing.JPanel passwordButtonPanel;
    private javax.swing.JPasswordField passwordButtonPanelTextField;
    private javax.swing.JButton passwordPanelBackButton;
    private javax.swing.JLabel workerNameLabel;
    // End of variables declaration//GEN-END:variables
}
